package org.mandrader.sv.filesystem.tools.panels;

import java.awt.Component;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import org.mandrader.sv.filesystem.tools.actions.JBIAddUtf8HtmlCode;
import org.mandrader.sv.filesystem.tools.actions.JBIFixHtml5;
import org.mandrader.sv.filesystem.tools.model.ComboItem;

@SuppressWarnings({"rawtypes"})
public class Utf8HtmlCodePanel extends javax.swing.JPanel {

    private static final long serialVersionUID = -8303981905070902696L;
    private JBIAddUtf8HtmlCode owner;

    public Utf8HtmlCodePanel() {
        initComponents();
        clearSelection();
    }

    public ComboItem getSelectedItem() {
        ComboItem ret = null;
        if (jComboBox1 != null) {
            ret = (ComboItem) jComboBox1.getSelectedItem();
        }
        return ret;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jComboBox1 = new javax.swing.JComboBox<>();

        setMaximumSize(new java.awt.Dimension(60, 24));
        setMinimumSize(new java.awt.Dimension(60, 16));
        setPreferredSize(new java.awt.Dimension(60, 24));
        setLayout(new java.awt.GridBagLayout());

        jComboBox1.setModel(new DefaultComboBoxModel(JBIFixHtml5.SPANISH_SYMBOLS.toArray()));
        jComboBox1.setToolTipText(org.openide.util.NbBundle.getMessage(Utf8HtmlCodePanel.class, "Utf8HtmlCodePanel.jComboBox1.toolTipText")); // NOI18N
        jComboBox1.setMinimumSize(new java.awt.Dimension(100, 16));
        jComboBox1.setPreferredSize(new java.awt.Dimension(100, 24));
        jComboBox1.setRenderer(new DefaultListCellRenderer() {
            private static final long serialVersionUID = -5460014450312978883L;

            @Override
            public Component getListCellRendererComponent(
                JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof ComboItem) {
                    ComboItem v = (ComboItem) value;
                    setText(v.getLabel());
                }
                return this;
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jComboBox1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if (owner != null) {
            owner.actionPerformed(evt);
            clearSelection();
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    // End of variables declaration//GEN-END:variables

    public final void clearSelection() {
        if (jComboBox1 != null) {
            jComboBox1.setSelectedItem(null);
        }
    }

    public JBIAddUtf8HtmlCode getOwner() {
        return owner;
    }

    public void setOwner(JBIAddUtf8HtmlCode owner) {
        this.owner = owner;
    }

}
